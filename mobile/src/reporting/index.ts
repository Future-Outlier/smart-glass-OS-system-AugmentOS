// =====================================
// üì¶ CORE TYPES AND INTERFACES
// =====================================
export { ReportLevel, ReportData, ReportDataBuilder, createReport, IReportProvider } from './core'
export { ReportManager } from './core'

// =====================================
// üîå PROVIDERS
// =====================================
export { SentryReportProvider, ConsoleReportProvider, PostHogReportProvider } from './providers'

// =====================================
// üìä ANALYTICS & TRACKING
// =====================================
export {
  trackEvent,
  trackUserAction,
  trackFeatureUsage,
  trackPageView,
  trackPerformance,
  trackApiEvent,
  trackSessionEvent,
  trackTranscriptionEvent,
  trackAuthEvent,
  trackErrorEvent,
} from './analytics'

// =====================================
// ‚ö†Ô∏è ERROR REPORTING
// =====================================
export {
  reportError,
  reportWarning,
  reportInfo,
  reportCritical,
} from './errors'

// =====================================
// üì± APP LIFECYCLE REPORTING
// =====================================
export {
  reportAppStartupIssue,
  reportAppCrash,
  reportNavigationIssue,
} from './domains'

// =====================================
// üåê NETWORK & API REPORTING
// =====================================
export {
  reportApiRequestFailure,
  reportNetworkIssue,
  reportTimeoutError,
} from './domains'

// =====================================
// üíæ STORAGE & DATA REPORTING
// =====================================
export {
  reportStorageReadFailure,
  reportStorageWriteFailure,
  reportDataParsingError,
} from './domains'

// =====================================
// üì∑ CAMERA & MEDIA REPORTING
// =====================================
export {
  reportCameraAccessFailure,
  reportCameraPermissionDenied,
  reportMediaCaptureFailure,
} from './domains'

// =====================================
// üìç LOCATION & PERMISSIONS REPORTING
// =====================================
export {
  reportLocationAccessFailure,
  reportPermissionDenied,
} from './domains'

// =====================================
// üîÑ STATE MANAGEMENT REPORTING
// =====================================
export {
  reportStateInconsistency,
  reportStateUpdateFailure,
} from './domains'

// =====================================
// üé® UI & COMPONENTS REPORTING
// =====================================
export {
  reportComponentError,
  reportUIInteractionFailure,
} from './domains'

// =====================================
// üõ†Ô∏è SYSTEM MANAGEMENT
// =====================================
export {
  initializeReporting,
  setUserContext,
  clearUserContext,
  addBreadcrumb,
  setProviderEnabled,
  getReportManager,
  getProviderStatus,
} from './system'

// =====================================
// ‚öôÔ∏è CONFIGURATION
// =====================================
export {
  // Sentry configuration
  getSentryDsn,
  getSentryOrg,
  getSentryProject,
  getSentryUrl,
  isSentryEnabled,
  initializeSentry,
  getSentryAppConfig,
  // PostHog configuration
  getPostHogApiKey,
  getPostHogHost,
  isPostHogEnabled,
  initializePostHog,
  getPostHog,
} from './config' 