#include <stdint.h>
#include "Lc3DecoderLtpf.h"
using namespace sneak::dec;
//31bits
static const float _conf_xtbl_filter_16[4][3] = { 
    {6.023618207009578e-01, 4.197609261363617e-01, -1.883424527883687e-02},
    {5.994768582584314e-01, 4.197609261363620e-01, -1.594928283631041e-02},
    {5.967764663733787e-01, 4.197609261363617e-01, -1.324889095125780e-02},
    {5.942410120098895e-01, 4.197609261363618e-01, -1.071343658776831e-02}
};

static const float _conf_xtbl_filter_24[4][5] = {
    {3.989695588963494e-01, 5.142508607708275e-01, 1.004382966157454e-01, -1.278893956818042e-02, -1.572280075461383e-03},
    {3.948634911286333e-01, 5.123819208048688e-01, 1.043194926386267e-01, -1.091999960222166e-02, -1.347408330627317e-03},
    {3.909844475885914e-01, 5.106053522688359e-01, 1.079832524685944e-01, -9.143431066188848e-03, -1.132124620551895e-03},
    {3.873093888199928e-01, 5.089122083363975e-01, 1.114517380217371e-01, -7.450287133750717e-03, -9.255514050963111e-04}
};

static const float _conf_xtbl_filter_32[4][7] = {
    {2.982379446702096e-01, 4.652809203721290e-01, 2.105997428614279e-01, 3.766780380806063e-02, -1.015696155796564e-02, -2.535880996101096e-03, -3.182946168719958e-04},
    {2.943834154510240e-01, 4.619294002718798e-01, 2.129465770091844e-01, 4.066175002688857e-02, -8.693272297010050e-03, -2.178307114679820e-03, -2.742888063983188e-04},
    {2.907439213122688e-01, 4.587461910960279e-01, 2.151456974108970e-01, 4.350104772529774e-02, -7.295495347716925e-03, -1.834395637237086e-03, -2.316920186482416e-04},
    {2.872975852589158e-01, 4.557148886861379e-01, 2.172126950911401e-01, 4.620088878229615e-02, -5.957463802125952e-03, -1.502934284345198e-03, -1.903851911308866e-04} 
};

static const float _conf_xtbl_filter_48[4][11] = {
    {1.981363739883217e-01, 3.524494903964904e-01, 2.513695269649414e-01, 1.424146237314458e-01, 5.704731023952599e-02, 9.293366241586384e-03, -7.226025368953745e-03, -3.172679890356356e-03, -1.121835963567014e-03, -2.902957238400140e-04, -4.270815593769240e-05},
    {1.950709426598375e-01, 3.484660408341632e-01, 2.509988459466574e-01, 1.441167412482088e-01, 5.928947317677285e-02, 1.108923827452231e-02, -6.192908108653504e-03, -2.726705509251737e-03, -9.667125826217151e-04, -2.508100923165204e-04, -3.699938766131869e-05},
    {1.921810055196015e-01, 3.446945561091513e-01, 2.506220094626024e-01, 1.457102447664837e-01, 6.141132133664525e-02, 1.279941396562798e-02, -5.203721087886321e-03, -2.297324511109085e-03, -8.165608133217555e-04, -2.123855748277408e-04, -3.141271330981649e-05},
    {1.894485314175868e-01, 3.411139251108252e-01, 2.502406876894361e-01, 1.472065631098081e-01, 6.342477229539051e-02, 1.443203434150312e-02, -4.254449144657098e-03, -1.883081472613493e-03, -6.709619060722140e-04, -1.749363341966872e-04, -2.593864735284285e-05} 
};

static const float _conf_ytbl_filter_16[4][4] = {
    {2.098804630681809e-01, 5.835275754221211e-01, 2.098804630681809e-01, 0.000000000000000e+00},
    {1.069991860896389e-01, 5.500750019177116e-01, 3.356906254147840e-01, 6.698858366939680e-03},
    {3.967114782344967e-02, 4.592209296082350e-01, 4.592209296082350e-01, 3.967114782344967e-02},
    {6.698858366939680e-03, 3.356906254147840e-01, 5.500750019177116e-01, 1.069991860896389e-01}
};

static const float _conf_ytbl_filter_24[4][6] = {
    {6.322231627323796e-02, 2.507309606013235e-01, 3.713909428901578e-01, 2.507309606013235e-01, 6.322231627323796e-02, 0.000000000000000e+00},
    {3.459272174099855e-02, 1.986515602645028e-01, 3.626411726581452e-01, 2.986750548992179e-01, 1.013092873505928e-01, 4.263543712369752e-03},
    {1.535746784963907e-02, 1.474344878058222e-01, 3.374259553990717e-01, 3.374259553990717e-01, 1.474344878058222e-01, 1.535746784963907e-02},
    {4.263543712369752e-03, 1.013092873505928e-01, 2.986750548992179e-01, 3.626411726581452e-01, 1.986515602645028e-01, 3.459272174099855e-02}
};

static const float _conf_ytbl_filter_32[4][8] = {
    {2.900401878228730e-02, 1.129857420560927e-01, 2.212024028097570e-01, 2.723909472446145e-01, 2.212024028097570e-01, 1.129857420560927e-01, 2.900401878228730e-02, 0.000000000000000e+00},
    {1.703153418385261e-02, 8.722503785537784e-02, 1.961407762232199e-01, 2.689237982237257e-01, 2.424999102756389e-01, 1.405773364650031e-01, 4.474877169485788e-02, 3.127030243100724e-03},
    {8.563673748488349e-03, 6.426222944493845e-02, 1.687676705918012e-01, 2.587445937795505e-01, 2.587445937795505e-01, 1.687676705918012e-01, 6.426222944493845e-02, 8.563673748488349e-03},
    {3.127030243100724e-03, 4.474877169485788e-02, 1.405773364650031e-01, 2.424999102756389e-01, 2.689237982237257e-01, 1.961407762232199e-01, 8.722503785537784e-02, 1.703153418385261e-02} 
};

static const float _conf_ytbl_filter_48[4][12] = {
    {1.082359386659387e-02, 3.608969221303979e-02, 7.676401468099964e-02, 1.241530577501703e-01, 1.627596438300696e-01, 1.776771417779109e-01, 1.627596438300696e-01, 1.241530577501703e-01, 7.676401468099964e-02, 3.608969221303979e-02, 1.082359386659387e-02, 0.000000000000000e+00},
    {7.041404930459358e-03, 2.819702319820420e-02, 6.547044935127551e-02, 1.124647986743299e-01, 1.548418956489015e-01, 1.767122381341857e-01, 1.691507213057663e-01, 1.352901577989766e-01, 8.851425011427483e-02, 4.499353848562444e-02, 1.557613714732002e-02, 2.039721956502016e-03},
    {4.146998467444788e-03, 2.135757310741917e-02, 5.482735584552816e-02, 1.004971444643720e-01, 1.456060342830002e-01, 1.738439838565869e-01, 1.738439838565869e-01, 1.456060342830002e-01, 1.004971444643720e-01, 5.482735584552816e-02, 2.135757310741917e-02, 4.146998467444788e-03},
    {2.039721956502016e-03, 1.557613714732002e-02, 4.499353848562444e-02, 8.851425011427483e-02, 1.352901577989766e-01, 1.691507213057663e-01, 1.767122381341857e-01, 1.548418956489015e-01, 1.124647986743299e-01, 6.547044935127551e-02, 2.819702319820420e-02, 7.041404930459358e-03} 
};
///
void Lc3DecoderLtpf::initData() {
    int fs = _sample_rate;
    if (fs == 8000 || fs == 16000) {
        _ytbl_filter[0] = _conf_ytbl_filter_16[0];
        _ytbl_filter[1] = _conf_ytbl_filter_16[1];
        _ytbl_filter[2] = _conf_ytbl_filter_16[2];
        _ytbl_filter[3] = _conf_ytbl_filter_16[3];
        _ytbl_len_r = 4;
        _xtbl_filter[0] = _conf_xtbl_filter_16[0];
        _xtbl_filter[1] = _conf_xtbl_filter_16[1];
        _xtbl_filter[2] = _conf_xtbl_filter_16[2];
        _xtbl_filter[3] = _conf_xtbl_filter_16[3];
        _xtbl_len = 4 - 2;
        _xtbl_len_r = 3;
    }
    else if (fs == 24000) {
        _ytbl_filter[0] = _conf_ytbl_filter_24[0];
        _ytbl_filter[1] = _conf_ytbl_filter_24[1];
        _ytbl_filter[2] = _conf_ytbl_filter_24[2];
        _ytbl_filter[3] = _conf_ytbl_filter_24[3];
        _ytbl_len_r = 6;
        _xtbl_filter[0] = _conf_xtbl_filter_24[0];
        _xtbl_filter[1] = _conf_xtbl_filter_24[1];
        _xtbl_filter[2] = _conf_xtbl_filter_24[2];
        _xtbl_filter[3] = _conf_xtbl_filter_24[3];
        _xtbl_len = 6 - 2;
        _xtbl_len_r = 5;
    }
    else if (fs == 32000) {
        _ytbl_filter[0] = _conf_ytbl_filter_32[0];
        _ytbl_filter[1] = _conf_ytbl_filter_32[1];
        _ytbl_filter[2] = _conf_ytbl_filter_32[2];
        _ytbl_filter[3] = _conf_ytbl_filter_32[3];
        _ytbl_len_r = 8;
        _xtbl_filter[0] = _conf_xtbl_filter_32[0];
        _xtbl_filter[1] = _conf_xtbl_filter_32[1];
        _xtbl_filter[2] = _conf_xtbl_filter_32[2];
        _xtbl_filter[3] = _conf_xtbl_filter_32[3];
        _xtbl_len = 8 - 2;
        _xtbl_len_r = 7;
    }
    else if (fs == 44100 || fs == 48000) {
        _ytbl_filter[0] = _conf_ytbl_filter_48[0];
        _ytbl_filter[1] = _conf_ytbl_filter_48[1];
        _ytbl_filter[2] = _conf_ytbl_filter_48[2];
        _ytbl_filter[3] = _conf_ytbl_filter_48[3];
        _ytbl_len_r = 12;
        _xtbl_filter[0] = _conf_xtbl_filter_48[0];
        _xtbl_filter[1] = _conf_xtbl_filter_48[1];
        _xtbl_filter[2] = _conf_xtbl_filter_48[2];
        _xtbl_filter[3] = _conf_xtbl_filter_48[3];
        _xtbl_len = 12 - 2;
        _xtbl_len_r = 11;
    }
    //
    //_ytbl_len = std::max(fs+7999, 16000) / 8000;
    _ytbl_len = _ytbl_len_r >> 1;
    //
    //_xpast = _xtbl_len;
    //_ypast = ((228 * fs + 12800 - 1) / 12800) + _ytbl_len;
    _xpast = _ypast = _ytbl_len_r > _xtbl_len_r ? _ytbl_len_r : _xtbl_len_r;

}
